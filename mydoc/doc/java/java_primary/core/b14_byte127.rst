一个byte是1个字节，能表示的数的范围是-128~127.请问，这是为什么呢？
=======================================================================


原码、反码和补码
-----------------------------

在计算机内，定点数有3种表示法：原码、反码和补码

- 原码：就是二进制定点表示法，即最高位为符号位，“0”表示正，“1”表示负，其余位表示数值的大小。
- 反码：表示法规定：正数的反码与其原码相同；负数的反码是对其原码逐位取反，但符号位除外。
- 补码：表示法规定：正数的补码与其原码相同；负数的补码是在其反码的末位加1。

JAVA中的正数、负数
----------------------

JAVA中用补码表示二进制数，补码的最高位是符号位，最高位为“0”表示正数，最高位为“1”表示负数。
正数的补码是其本身，负数的补码是其绝对值（即正数）取反加1。这里是各位取反，包括了符号位，注意与反码的区别

等比数列求和公式
----------------------------

首项是a1，公比是q（q≠1），则Sn=a1(1-q^n)/(1-q)；
例如：2^0+2^1+2^2+2^3+2^4+2^5+2^6+2^7，这里a1=1，q=2，所以Sn=1-2^7/-1=-1*(1-2^7)=2^7-1=127

计算步骤
-------------

1、byte为一字节8位，最高位是符号位，即最大值是01111111，因正数的补码是其本身，即最大值的补码是01111111，
   最大值的原码也是01111111，所以，此正数为01111111即用十进制表示形式为127
2、最小值是10000000，由于是补码需要转换成原码，因此先减去1即01111111，然后取反10000000，这就是原码，原码就是10000000，这就是最小值的绝对值，即2^7=128，那么，最小值就是-128 （10000000 -> 取反（01111111）-> (加一 10000000）-> 2的8次方 128 -> 负数 -128）


https://www.cnblogs.com/zht214/p/8040046.html

https://www.zhihu.com/question/28685048

https://www.zhihu.com/question/20159860/answer/21113783

https://www.douban.com/note/223507364/

http://legendmohe.net/2013/08/22/%E8%A1%A5%E7%A0%81%E3%80%81%E8%B4%9F%E6%95%B0%E5%92%8C%E5%87%8F%E6%B3%95/



