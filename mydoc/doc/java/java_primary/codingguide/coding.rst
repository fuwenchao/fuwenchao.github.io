代码风格
===========


【强制】大括号的使用约定。如果是大括号内为空，则简洁地写成成{}即可，不需要换行；如果
是非空代码块则：

::

    1） 左大括号前不换行。
    2） 左大括号后换行。
    3） 右大括号前换行。
    4） 右大括号后还有 else 等代码则不换行；表示终止的右大括号后必须换行。


左小括号和字符之间不出现空格；右小括号和字符之间也不出现空格。

    if ( a == b ) // 错误
    if (a == b)   // 正确

if / for / while / switch / do 等保留字与括号之间都必须加空格

任何二目、三目运算符的左右两边都需要加一个空格。

行级注释的//与注释内容之间有且仅有一个空格。

采用4个空格缩进，禁止使用Tab控制符。

单行字符不超过120个，超过需要换行，换行原则如下： 


    - 第二行相对于第一行缩进4哥空格，从第三行开始不再进行缩进
    - 运算符一起换行(如：+)
    - .符号一起换行
    - 方法调用中的多个参数需要换行时，在逗号后进行。

.. image:: ./images/code_style1.png


方法参数在定义和传入时，多个参数后面必须加空格。

    method(args1, args2);


示例：

.. code:: java

        public static void main(String[] args) {
            // 缩进 4 个空格
            String say = "hello";
            // 运算符的左右必须有一个空格
            int flag = 0;
            // 关键词 if 与括号之间必须有一个空格，括号内的 f 与左括号，0 与右括号不需要空格
            if (flag == 0) {
                System.out.println(say);
            }

            // 左大括号前加空格且不换行；左大括号后换行
            if (flag == 1) {
                System.out.println("world");
            // 右大括号前换行，右大括号后有 else，不用换行
            } else {
                System.out.println("ok");
            // 在右大括号后直接结束，则必须换行
            }
        }


示例：

.. code:: java

    正例：
    StringBuffer sb = new StringBuffer();
    // 超过 120 个字符的情况下，换行缩进 4 个空格，点号和方法名称一起换行
    sb.append("zi").append("xin")...
    .append("huang")...
    .append("huang")...
    .append("huang");

    反例：
    StringBuffer sb = new StringBuffer();
    // 超过 120 个字符的情况下，不要在括号前换行
    sb.append("zi").append("xin")...append
    ("huang");
    // 参数很多的方法调用可能超过 120 个字符，不要在逗号前换行
    method(args1, args2, args3, ...
    , argsX); 


【强制】IDE 的 text file encoding 设置为 UTF-8; IDE 中文件的换行符使用 Unix 格式，
不要使用 Windows 格式。

【推荐】单个方法的总行数不超过 80 行。

::

    说明：包括方法签名、结束右大括号、方法内代码、注释、空行、回车及任何不可见字符的总
    行数不超过 80 行。
    正例：代码逻辑分清红花和绿叶，个性和共性，绿叶逻辑单独出来成为额外方法，使主干代码
    更加清晰；共性逻辑抽取成为共性方法，便于复用和维护。


**【推荐】** 不同逻辑、不同语义、不同业务的代码之间插入一个空行分隔开来以提升可读性。

说明：任何情形，没有必要插入多个空行进行隔开。